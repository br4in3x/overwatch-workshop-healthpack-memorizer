rule("INIT MAP_ILIOS_RUINS") {
  event {
    Ongoing - Global;
  }

  conditions {
    Current Map == Map(Ilios Ruins);
  }

  actions {
    // set objects locations
    Set Global Variable(SMALL_HP_TOGGLE_LOCATION, Vector(-72.84, 63.73, -164.55));
    Set Global Variable(LARGE_HP_TOGGLE_LOCATION, Vector(-72.78, 63.73, -159.28));
    
    // Small healthpacks (none on this map - point to large control)
    Set Global Variable(
      HP_LOCATIONS_SMALL, 
      Append To Array(Global Variable(HP_LOCATIONS_SMALL), 
      Global Variable(LARGE_HP_TOGGLE_LOCATION)
    ));

    // Large healthpacks
    Set Global Variable(HP_LOCATIONS_LARGE, Append To Array(Global Variable(HP_LOCATIONS_LARGE), Vector(-4.730, 60.460, -174.628)));
    Set Global Variable(HP_LOCATIONS_LARGE, Append To Array(Global Variable(HP_LOCATIONS_LARGE), Vector(-5.672, 60.460, -140.020)));
    Set Global Variable(HP_LOCATIONS_LARGE, Append To Array(Global Variable(HP_LOCATIONS_LARGE), Vector(6.401, 60.460, -156.691)));
    Set Global Variable(HP_LOCATIONS_LARGE, Append To Array(Global Variable(HP_LOCATIONS_LARGE), Vector(28.590, 60.722, -177.711)));
    Set Global Variable(HP_LOCATIONS_LARGE, Append To Array(Global Variable(HP_LOCATIONS_LARGE), Vector(49.873, 60.460, -156.337)));
    Set Global Variable(HP_LOCATIONS_LARGE, Append To Array(Global Variable(HP_LOCATIONS_LARGE), Vector(62.265, 60.461, -174.741)));
    Set Global Variable(HP_LOCATIONS_LARGE, Append To Array(Global Variable(HP_LOCATIONS_LARGE), Vector(63.090, 60.460, -140.440)));

    // Assing to container
    Set Global Variable At Index(HP_LOCATIONS, Global Variable(KEY_HEALTHPACK_TYPE_LARGE), Global Variable(HP_LOCATIONS_LARGE));
    Set Global Variable At Index(HP_LOCATIONS, Global Variable(KEY_HEALTHPACK_TYPE_SMALL), Global Variable(HP_LOCATIONS_SMALL));
  }
}
