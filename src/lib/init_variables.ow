variables {
  global:
    // Locations
    0: HP_LOCATIONS 
    1: HP_LOCATIONS_LARGE
    2: HP_LOCATIONS_SMALL

    // Array keys
    3: KEY_HEALTHPACK_TYPE_LARGE
    4: KEY_HEALTHPACK_TYPE_SMALL

    // Controls positions
    5: SMALL_HP_TOGGLE_LOCATION
    6: LARGE_HP_TOGGLE_LOCATION
    7: TOGGLE_LOCATION_DISTANCE
    8: LEGEND_LOCATION

    // Variables to build information arrays.
    // Useful when getting information from workshop inspector
    9: SMALL_HP_INFO
    10: LARGE_HP_INFO

    11: SPAWN_LOCATION

  player:
    0: CURRENT_HP_TYPE
    1: CURRENT_HP_IDX
}

rule("INIT VARIABLES") {
  event {
    Ongoing - Global;
  }

  actions {
    Set Global Variable(KEY_HEALTHPACK_TYPE_LARGE, 0);
    Set Global Variable(KEY_HEALTHPACK_TYPE_SMALL, 1);    
    Set Global Variable(TOGGLE_LOCATION_DISTANCE, 2);
  }
}

// Healthpack locations database
rule("INITIALIZE HP_LOCATIONS") {
  event {
    Ongoing - Global;
  }

  actions {
    // Assing to container
    Set Global Variable At Index(HP_LOCATIONS, Global Variable(KEY_HEALTHPACK_TYPE_LARGE), Global Variable(HP_LOCATIONS_LARGE));
    Set Global Variable At Index(HP_LOCATIONS, Global Variable(KEY_HEALTHPACK_TYPE_SMALL), Global Variable(HP_LOCATIONS_SMALL));
  }
}

// Player-specific state variables
rule("INIT PLAYER STATE") {
  event {
    Ongoing - Each Player;
    All;
    All;
  }

  actions {
    Set Player Variable(Event Player, CURRENT_HP_IDX, 0);
    Set Player Variable(Event Player, CURRENT_HP_TYPE, Global Variable(KEY_HEALTHPACK_TYPE_LARGE));
  }
}
